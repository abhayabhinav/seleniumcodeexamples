<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="TestNg_Module9" duration-ms="87" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
    <groups>
    </groups>
    <test name="TestObject" duration-ms="32" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
      <class name="Test.ApplicationTest">
        <test-method status="PASS" signature="BeforeSuite()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="BeforeSuite" is-config="true" duration-ms="42" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method status="PASS" signature="AfterSuite()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="AfterSuite" is-config="true" duration-ms="1" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- Test.ApplicationTest -->
      <class name="Test.TestObject">
        <test-method status="PASS" signature="dologinTest(java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:Test.TestObject@29774679]" name="dologinTest" duration-ms="5" started-at="2018-04-26T20:15:11Z" data-provider="getData" finished-at="2018-04-26T20:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[username1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9012]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dologinTest -->
        <test-method status="PASS" signature="dologinTest(java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:Test.TestObject@29774679]" name="dologinTest" duration-ms="2" started-at="2018-04-26T20:15:11Z" data-provider="getData" finished-at="2018-04-26T20:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[username2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5678]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dologinTest -->
        <test-method status="PASS" signature="dologinTest(java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:Test.TestObject@29774679]" name="dologinTest" duration-ms="1" started-at="2018-04-26T20:15:11Z" data-provider="getData" finished-at="2018-04-26T20:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[username3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dologinTest -->
      </class> <!-- Test.TestObject -->
    </test> <!-- TestObject -->
    <test name="ApplicationTest" duration-ms="87" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
      <class name="Test.ApplicationTest">
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="BeforeTest" is-config="true" duration-ms="1" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="doLogin()[pri:1, instance:Test.ApplicationTest@4f933fd1]" name="doLogin" duration-ms="6" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="AfterMethod" is-config="true" duration-ms="5" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="BeforeMethod" is-config="true" duration-ms="2" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="AccessDashboard()[pri:2, instance:Test.ApplicationTest@4f933fd1]" name="AccessDashboard" duration-ms="4" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Abhay] but found [Abhinav]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Abhay] but found [Abhinav]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at Test.ApplicationTest.AccessDashboard(ApplicationTest.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessDashboard -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="logout()[pri:3, instance:Test.ApplicationTest@4f933fd1]" name="logout" duration-ms="1" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterTest()[pri:0, instance:Test.ApplicationTest@4f933fd1]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-04-26T20:15:11Z" finished-at="2018-04-26T20:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
      </class> <!-- Test.ApplicationTest -->
    </test> <!-- ApplicationTest -->
  </suite> <!-- TestNg_Module9 -->
</testng-results>
